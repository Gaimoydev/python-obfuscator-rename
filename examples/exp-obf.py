_ééçéçééç = []
class _ééçççéçé:
    def __init__(_çééççççç, _éééçççéé):
        _çééççççç._éééçççéé = _éééçççéé
class _çéçéééçé:
    def __init__(_çééççççç, _çççççééé):
        _çééççççç._çççççééé = _çççççééé
class _çééçééçé(object):
    def __init__(_çééççççç, _çééçéçéç, _éééééçéç, _ççééçéçé, _çéééçéçé):
        _çééççççç._éççççééç = _çééçéçéç
        _çééççççç._çéçççééç = _éééééçéç
        _çééççççç._éçççéççé = _ççééçéçé
        _çééççççç._éçéçéççç = _çéééçéçé
        _çééççççç._çççééçéé = None
        _çééççççç._éçéççççé = []
        _çééççççç._çéççéççç = []
    def _ççççéééç(_çééççççç):
        _çééççççç._çççééçéé = _çéçéééçé(None)
        _éççéçççç = _çééççççç._çççééçéé
        for _çççççééé in _çééççççç._çéçççééç:
            _çççéçççç = _çéçéééçé(_çççççééé)
            _éççéçççç._çéçééççé = _çççéçççç
            _çççéçççç._çééçéçéé = _éççéçççç
            _çççéçççç._çéçéççéç = _çççéçççç
            _çççéçççç._ççéççééé = _çççéçççç
            _éççéçççç = _çççéçççç
        _éççéçççç._çéçééççé = _çééççççç._çççééçéé
        _çééççççç._çççééçéé._çééçéçéé = _éççéçççç
        for _ééççééçç, _éééçççéé in enumerate(_çééççççç._éççççééç):
            _ççéééééé = None
            _ççééçççé = None
            _éççéçççç = _çééççççç._çççééçéé._çéçééççé
            while _éççéçççç!=_çééççççç._çççééçéé:
                if _çééççççç._éçéçéççç(_éééçççéé, _éççéçççç._çççççééé):
                    _ééçéççéç = _ééçççéçé(_ééççééçç)
                    if not _ççéééééé:
                        _ççéééééé = _ççééçççé = _ééçéççéç
                    else:
                        _ççééçççé._çéçééççé = _ééçéççéç
                        _ééçéççéç._çééçéçéé = _ççééçççé
                        _ççééçççé = _ééçéççéç
                    _çççççéçç = _éççéçççç._çéçéççéç
                    _éççéçççç._çéçéççéç = _ééçéççéç
                    _ééçéççéç._ççéççééé = _éççéçççç
                    _ééçéççéç._çéçéççéç = _çççççéçç
                    _çççççéçç._ççéççééé = _ééçéççéç
                _éççéçççç = _éççéçççç._çéçééççé
            if _ççééçççé:
                _ççééçççé._çéçééççé = _ççéééééé
                _ççéééééé._çééçéçéé = _ççééçççé
    def _ééééçéçé(_çééççççç):
        _çéééçççé = (_çééççççç._çççééçéé._çéçééççé == _çééççççç._çççééçéé)
        if not _çéééçççé:
            _ççéççççç = True
            _ééééééçç = _çééççççç._çççééçéé._çéçééççé
            while _ééééééçç!=_çééççççç._çççééçéé:
                if _ééééééçç._çççççééé not in _çééççççç._éçççéççé or _ééééééçç._ççéççééé != _ééééééçç:
                    _ççéççççç = False
                    break
                _ééééééçç = _ééééééçç._çéçééççé
        if _çéééçççé or _ççéççççç:
            _éçéçççéç = sorted(_çééççççç._çéççéççç)
            if _éçéçççéç not in _çééççççç._éçéççççé:
                _çééççççç._éçéççççé.append(_éçéçççéç)
        else:
            _ééééééçç = _çééççççç._çççééçéé._çéçééççé
            if _ééééééçç._ççéççééé == _ééééééçç:
                if _ééééééçç._çççççééé in _çééççççç._éçççéççé:
                    _ééééééçç = _ééééééçç._çéçééççé
                else:
                    return
            _ééççééçé = _ééééééçç._ççéççééé
            while _ééççééçé!=_ééééééçç:
                _çééççççç._çéççéççç.append(_ééççééçé._éééçççéé)
                _çééççççç._ççççéççé(_ééççééçé)
                _çééççççç._ééééçéçé()
                _çééççççç._éééçéçéç(_ééççééçé)
                _çééççççç._çéççéççç.pop()
                _ééççééçé = _ééççééçé._ççéççééé
    def _ççççéççé(_çééççççç, r):
        _çççéééçç = r
        _çééççççç._çéçéçéçç(r)
        r = r._çéçééççé
        while r!=_çççéééçç:
            _çééççççç._çéçéçéçç(r)
            r = r._çéçééççé
    def _éééçéçéç(_çééççççç, r):
        _çççéééçç = r
        r = r._çééçéçéé
        while r!=_çççéééçç:
            _çééççççç._çééçééçç(r)
            r = r._çééçéçéé
        _çééççççç._çééçééçç(r)
    def _çéçéçéçç(_çééççççç, _éççéçççé):
        while not isinstance(_éççéçççé, _çéçéééçé):
            _éççéçççé = _éççéçççé._çéçéççéç
        _éççéçççé._çéçééççé._çééçéçéé = _éççéçççé._çééçéçéé
        _éççéçççé._çééçéçéé._çéçééççé = _éççéçççé._çéçééççé
        _ééééçééç = _éççéçççé
        _éççéçççé = _éççéçççé._ççéççééé
        while _éççéçççé!=_ééééçééç:
            r = _éççéçççé
            _éççééééé = _éççéçççé._çéçééççé
            while _éççééééé!=r:
                _éççééééé._çéçéççéç._ççéççééé = _éççééééé._ççéççééé
                _éççééééé._ççéççééé._çéçéççéç = _éççééééé._çéçéççéç
                _éççééééé = _éççééééé._çéçééççé
            _éççéçççé = _éççéçççé._ççéççééé
    def _çééçééçç(_çééççççç, _éççéçççé):
        while not isinstance(_éççéçççé, _çéçéééçé):
            _éççéçççé = _éççéçççé._çéçéççéç
        _éççéçççé._çééçéçéé._çéçééççé = _éççéçççé
        _éççéçççé._çéçééççé._çééçéçéé = _éççéçççé
        _ééééçééç = _éççéçççé
        _éççéçççé = _éççéçççé._çéçéççéç
        while _éççéçççé!=_ééééçééç:
            r = _éççéçççé
            _éççééééé = _éççéçççé._çéçééççé
            while _éççééééé!=r:
                _éççééééé._çéçéççéç._ççéççééé = _éççééééé
                _éççééééé._ççéççééé._çéçéççéç = _éççééééé
                _éççééééé = _éççééééé._çéçééççé
            _éççéçççé = _éççéçççé._çéçéççéç
    def _ççççççéç(_çééççççç):
        return [[_çééççççç._éççççééç[_ççéçéçéé] for _ççéçéçéé in _éçéçççéç] for _éçéçççéç in _çééççççç._éçéççççé]
def _éççééçéç(_éççééééç):
    _çééçéçéç = [(_ççéçéçéé, _çééççéçé) for _ççéçéçéé in range(_éççééééç) for _çééççéçé in range(_éççééééç)]
    _éééééçéç = []
    _ççééçéçé = []
    for _ééççééçç in range(_éççééééç):
        _éééééçéç.append(('row', _ééççééçç))
    for _ééççééçç in range(_éççééééç):
        _éééééçéç.append(('col', _ééççééçç))
    for _ééççééçç in range(_éççééééç*2-1):
        _éééééçéç.append(('diag', _ééççééçç))
        _ççééçéçé.append(('diag', _ééççééçç))
    for _ééççééçç in range(_éççééééç*2-1):
        _éééééçéç.append(('rdiag', _ééççééçç))
        _ççééçéçé.append(('rdiag', _ééççééçç))
    def _çééééçéç(_éééçççéé, _çççççééé):
        _éççééçéé, _ééçççééç = _çççççééé
        if _éççééçéé=='row':
            return _éééçççéé[0]==_ééçççééç
        if _éççééçéé=='col':
            return _éééçççéé[1]==_ééçççééç
        if _éççééçéé=='diag':
            return (_éééçççéé[0]+_éééçççéé[1])==_ééçççééç
        else:
            return (_éççééééç-1-_éééçççéé[0]+_éééçççéé[1])==_ééçççééç
    _éçéééçéé = _çééçééçé(_çééçéçéç, _éééééçéç, _ççééçéçé, _çééééçéç)
    _éçéééçéé._ççççéééç()
    _éçéééçéé._ééééçéçé()
    _çééççéçç = _éçéééçéé._ççççççéç()
    for _éçéçççéç in _çééççéçç:
        print("+++++++++")
        for _ééççééçç in range(_éççééééç):
            _éçéééçéç = ""
            for _ççççéçéé in range(_éççééééç):
                if (_ééççééçç, _ççççéçéé) in _éçéçççéç:
                    _éçéééçéç+="1"
                else:
                    _éçéééçéç+="0"
            print(_éçéééçéç)
        print("+++++++++")
    print("%d results found for N-Queen"%len(_çééççéçç))
def _ééçééééç():
    _éççééçéç(10)
if __name__ == "__main__":
    _ééçééééç()